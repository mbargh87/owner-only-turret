// SPDX-License-Identifier: MIT
pragma solidity >=0.8.24;

/* Autogenerated file. Do not edit manually. */

import { TargetPriority, Turret, SmartTurretTarget, AggressionParams } from "@eveworld/world-v2/src/namespaces/evefrontier/systems/smart-turret/types.sol";

/**
 * @title IOwnerOnlyTurretSystem
 * @author MUD (https://mud.dev) by Lattice (https://lattice.xyz)
 * @dev This interface is automatically generated from the corresponding system contract. Do not edit manually.
 */
interface IOwnerOnlyTurretSystem {
  function ownerturret__setTurretOwner(uint256 smartTurretId, uint256 ownerCharacterId) external;

  function ownerturret__updateTurretOwner(uint256 smartTurretId, uint256 newOwnerCharacterId) external;

  function ownerturret__inProximity(
    uint256 smartTurretId,
    uint256 characterId,
    TargetPriority[] memory priorityQueue,
    Turret memory turret,
    SmartTurretTarget memory turretTarget
  ) external returns (TargetPriority[] memory updatedPriorityQueue);

  function ownerturret__getIsTargetInQueue(
    TargetPriority[] memory priorityQueue,
    uint256 characterId
  ) external pure returns (bool isInQueue);

  function ownerturret__removeTargetFromQueue(
    TargetPriority[] memory priorityQueue,
    uint256 characterId
  ) external pure returns (TargetPriority[] memory updatedPriorityQueue);

  function ownerturret__updateWeight(
    TargetPriority[] memory priorityQueue
  ) external pure returns (TargetPriority[] memory updatedPriorityQueue);

  function ownerturret__addTargetToQueue(
    TargetPriority[] memory priorityQueue,
    TargetPriority memory newTarget
  ) external pure returns (TargetPriority[] memory updatedPriorityQueue);

  function ownerturret__bubbleSortTargetPriorityArray(
    TargetPriority[] memory priorityQueue
  ) external pure returns (TargetPriority[] memory sortedPriorityQueue);

  function ownerturret__aggression(
    AggressionParams memory aggressionParams
  ) external view returns (TargetPriority[] memory updatedPriorityQueue);
}
